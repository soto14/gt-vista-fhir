About
--------------------------------------------------------------------------------
This application uses the HAPI FHIR API to expose webservices to talk with the 
VistA Exchange API available at https://54.173.144.121/resource/docs/vx-api.
Specifically, it exposes calls to the "FHIR" section of the API to return
patient queries for the following:
- Patient 
- MedicationOrder
- Condition
- Observation
- Ecounter
- Procedure (not supported yet)
- MedicationAdministration (not supported yet)
- AllergyIntolerance (not supported yet)

How to build the WAR
--------------------------------------------------------------------------------
This application uses Maven to manage the build process.

The WAR file for the application can be built by running the following command
> mvn clean install
When Maven finishes the build there will be a WAR file for the application in the
/target directory.

How to deploy to Tomcat
--------------------------------------------------------------------------------
After running a "mvn clean install" command there will be a WAR file in the 
/target directory named "hapiGtVistaEx.war".

Copy that war file to the $CATALINA_HOME/webapps directory.

Then start Tomcat, and it will deploy the WAR file.

- http://localhost:8080/hapiGtVistaEx/fhir/Patient?identifier=9E7A%3B3&_format=json
- http://localhost:8080/hapiGtVistaEx/fhir/MedicationOrder?patient.identifier=9E7A%3B3&_format=json
- http://localhost:8080/hapiGtVistaEx/fhir/Condition?patient.identifier=9E7A%3B3&_format=json
- http://localhost:8080/hapiGtVistaEx/fhir/Observation?patient.identifier=9E7A%3B3&_format=json
- http://localhost:8080/hapiGtVistaEx/fhir/Encounter?patient.identifier=9E7A%3B3&_format=json

How to run locally with Jetty
--------------------------------------------------------------------------------
For testing the application can be run locally using the Maven Jetty plugin. It
allows Maven to create/run a Jetty servlet container that can be hit by a web
browser/client for testing. To start up the application in Jetty, run the following
Maven command:
> mvn jetty:run

You will be able to hit the web services at:
- http://localhost:8080/fhir/Patient?identifier=9E7A%3B3&_format=json
- http://localhost:8080/fhir/MedicationOrder?patient.identifier=9E7A%3B3&_format=json
- http://localhost:8080/fhir/Condition?patient.identifier=9E7A%3B3&_format=json
- http://localhost:8080/fhir/Observation?patient.identifier=9E7A%3B3&_format=json
- http://localhost:8080/fhir/Encounter?patient.identifier=9E7A%3B3&_format=json